services:
  # n8n workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: mem-agent-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - NODE_FUNCTION_ALLOW_EXTERNAL=axios,qs
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED:-true}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS:-true}
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL:-http://localhost:5678}
    depends_on:
      - postgres
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    networks:
      - mem-agent-network

  # PostgreSQL database for n8n
  postgres:
    image: postgres:15
    container_name: mem-agent-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - mem-agent-network

  # Mautic marketing automation
  mautic:
    image: mautic/mautic:5-apache
    container_name: mem-agent-mautic
    depends_on:
      - mautic-db
    environment:
      - MAUTIC_DB_HOST=${MAUTIC_DB_HOST:-mautic-db}
      - MAUTIC_DB_PORT=3306
      - MAUTIC_DB_DATABASE=${MAUTIC_DB_NAME}
      - MAUTIC_DB_USER=${MAUTIC_DB_USER}
      - MAUTIC_DB_PASSWORD=${MAUTIC_DB_PASSWORD}
      - MAUTIC_TRUSTED_PROXIES=0.0.0.0/0
      - MAUTIC_TRUSTED_HOSTS=${MAUTIC_WEB_URL:-localhost}
      - MAUTIC_SITE_URL=${MAUTIC_WEB_URL:-http://localhost:8888}
      - MAUTIC_MAILER_HOST=${SMTP_HOST}
      - MAUTIC_MAILER_PORT=${SMTP_PORT}
      - MAUTIC_MAILER_USER=${SMTP_USERNAME}
      - MAUTIC_MAILER_PASSWORD=${SMTP_PASSWORD}
      - MAUTIC_MAILER_ENCRYPTION=${SMTP_ENCRYPTION}
      - MAUTIC_MAILER_FROM_EMAIL=${SMTP_FROM_EMAIL}
      - MAUTIC_MAILER_FROM_NAME=${SMTP_FROM_NAME}
    volumes:
      - mautic_data:/var/www/html:rw
    ports:
      - "8888:80"
    restart: unless-stopped
    networks:
      - mem-agent-network

  # MariaDB for Mautic
  mautic-db:
    image: mariadb:10
    container_name: mem-agent-mautic-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MAUTIC_DB_PASSWORD}
      - MYSQL_DATABASE=${MAUTIC_DB_NAME}
      - MYSQL_USER=${MAUTIC_DB_USER}
      - MYSQL_PASSWORD=${MAUTIC_DB_PASSWORD}
    volumes:
      - mautic_db_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - mem-agent-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: mem-agent-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mem-agent-network

  # MEM_AGENT API service
  mem-agent-api:
    build: .
    container_name: mem-agent-api
    ports:
      - "8000:8000"
    environment:
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_VM_IP=${GCP_VM_IP}
      - API_BASE_URL=${API_BASE_URL}
      - ALLOWED_CORS_ORIGINS=${ALLOWED_CORS_ORIGINS}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
    depends_on:
      - redis
      - postgres
    volumes:
      - ./agents:/app/agents
      - ./config:/app/config
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - mem-agent-network

volumes:
  n8n_data:
  postgres_data:
  mautic_data:
  mautic_db_data:
  redis_data:

networks:
  mem-agent-network:
    driver: bridge
