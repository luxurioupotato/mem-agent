version: '3.9'

services:
  # n8n workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: mem-agent-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      - NODE_FUNCTION_ALLOW_EXTERNAL=axios,qs
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
    depends_on:
      - postgres
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    networks:
      - mem-agent-network

  # PostgreSQL database for n8n
  postgres:
    image: postgres:15
    container_name: mem-agent-postgres
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD}
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - mem-agent-network

  # Mautic marketing automation
  mautic:
    image: mautic/mautic:5-apache
    container_name: mem-agent-mautic
    depends_on:
      - mautic-db
    environment:
      - MAUTIC_DB_HOST=mautic-db
      - MAUTIC_DB_PORT=3306
      - MAUTIC_DB_DATABASE=${MAUTIC_DB_NAME}
      - MAUTIC_DB_USER=${MAUTIC_DB_USER}
      - MAUTIC_DB_PASSWORD=${MAUTIC_DB_PASSWORD}
      - MAUTIC_TRUSTED_PROXIES=0.0.0.0/0
    volumes:
      - mautic_data:/var/www/html:rw
    ports:
      - "8888:80"
    restart: unless-stopped
    networks:
      - mem-agent-network

  # MariaDB for Mautic
  mautic-db:
    image: mariadb:10
    container_name: mem-agent-mautic-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MAUTIC_DB_PASSWORD}
      - MYSQL_DATABASE=${MAUTIC_DB_NAME}
      - MYSQL_USER=${MAUTIC_DB_USER}
      - MYSQL_PASSWORD=${MAUTIC_DB_PASSWORD}
    volumes:
      - mautic_db_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - mem-agent-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: mem-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mem-agent-network

  # MEM_AGENT API service
  mem-agent-api:
    build: .
    container_name: mem-agent-api
    ports:
      - "8000:8000"
    environment:
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
    volumes:
      - ./agents:/app/agents
      - ./config:/app/config
    restart: unless-stopped
    networks:
      - mem-agent-network

volumes:
  n8n_data:
  postgres_data:
  mautic_data:
  mautic_db_data:
  redis_data:

networks:
  mem-agent-network:
    driver: bridge
